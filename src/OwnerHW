// SPDX-License-Identifier: MIT
pragma solidity >=0.6.12 <0.9.0;

contract Wallet {
    /**
     * @dev Prints Hello World string
     */
    address public Owner;
    address[] public Owners;

    constructor() {
        Owner = msg.sender;
        Owners.push(Owner);
    }

    receive() external payable {}

    function addOwner(address gabai) public isOwner {
        require(Owners.length < 3, "there are alredy three owners");
        Owners.push(gabai);
    }

    modifier isOwner() {
        bool flag = false;
        for (uint256 i = 0; i <= Owners.length; i++) {
            if (msg.sender == Owners[i]) {
                flag = true;
                break;
            }
        }

        require(flag, "you are not Owner");
        _;
    }

    function whithdraw(uint256 num) external isOwner {
        payable(msg.sender).transfer(num);
    }

    function getbalance() external view returns (uint256) {
        return address(this).balance;
    }
}
